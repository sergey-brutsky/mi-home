name: build project

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'master'

jobs:
  build_and_test:
    permissions:
      contents: read
      checks: write
    name: 'Build & Test'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup dotnet core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore -s https://api.nuget.org/v3/index.json
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --verbosity normal --logger "trx;LogFileName=test-results.trx" /p:CollectCoverage=true  /p:CoverletOutput=./TestResults/ /p:CoverletOutputFormat=cobertura MiHomeUnitTests
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success()
      with:
        name: xUnit Tests
        path: MiHomeUnitTests/TestResults/test-results.trx
        reporter: dotnet-trx
    - name: Get test report results with precise percentage
      run: |
        PASSED=$(cat MiHomeUnitTests/TestResults/test-results.trx | grep Counters | awk '{print $4}' | awk -F= '{print $2}' | sed "s/\"//g")
        FAILED=$(cat MiHomeUnitTests/TestResults/test-results.trx | grep Counters | awk '{print $5}' | awk -F= '{print $2}' | sed "s/\"//g")
        TOTAL=$(cat MiHomeUnitTests/TestResults/test-results.trx | grep Counters | awk '{print $2}' | awk -F= '{print $2}' | sed "s/\"//g")
        COVERAGE_PERCENTAGE=$(cat MiHomeUnitTests/TestResults/coverage.cobertura.xml | grep 'coverage line-rate' | awk '{print $2}' | awk -F= '{print $2}' | sed "s/\"//g" | cut -c 3-6 | sed "s/./.&/3")
        echo "PASSED=$PASSED" >> $GITHUB_ENV
        echo "FAILED=$FAILED" >> $GITHUB_ENV
        echo "TOTAL=$TOTAL" >> $GITHUB_ENV
        echo "COVERAGE_PERCENTAGE=$COVERAGE_PERCENTAGE" >> $GITHUB_ENV
    - name: Print test results
      run: echo "${{ env.PASSED }}/${{ env.TOTAL }} tests passed"
    - name: Create the tests badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: d70d7e06eb53484b7514bfd63cec6885
        filename: test_results.json
        label: tests
        message: ${{ env.PASSED }} passed ${{ env.FAILED }} failed
        color: green
    - name: Create code cov badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: d70d7e06eb53484b7514bfd63cec6885
        filename: code_cov.json
        label: coverage
        message: ${{ env.COVERAGE_PERCENTAGE }}%
        color: red
        namedLogo: umbrel
        logoColor: red

